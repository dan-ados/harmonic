version: '3.8'

services:

    db:
        container_name: db
        image: postgres:12.9-alpine
        restart: unless-stopped
        env_file: .env
        ports:
            - "5432:5432"
        environment:
            POSTGRES_PASSWORD: $POSTGRES_PASSWORD
            POSTGRES_USER: $POSTGRES_USER
            POSTGRES_DB: $POSTGRES_DB
        volumes:
            - dbdata:/var/lib/db/data
        networks:
            - harmonic-network

    redis:
        container_name: redis
        image: redis:6-alpine
        restart: unless-stopped
        ports:
            - "6379:6379"
        networks:
            - harmonic-network

    api:
        container_name: api
        build: server/.
        image: server-api:latest
        restart: unless-stopped
        env_file: .env
        environment:
            POSTGRES_PASSWORD: $POSTGRES_PASSWORD
            POSTGRES_USER: $POSTGRES_USER
            POSTGRES_DB: $POSTGRES_DB
        ports:
            - "8001:8001"
        volumes:
            - media:/code/media
            - static:/code/static
        networks:
            - harmonic-network
        depends_on:
            - db
        tty: true

    angular:
        container_name: angular
        image: nginx:1.21.3-alpine
        restart: unless-stopped
        ports:
            - "80:80"
        volumes:
            - ./nginx-conf:/etc/nginx/conf.d
            - ./html:/var/www/html
        networks:
            - harmonic-network
        depends_on:
            - api

volumes:
    dbdata:
    media:
    static:

networks:
    harmonic-network:
        driver: bridge
